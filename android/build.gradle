allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

// Force compileSdkVersion and targetSdkVersion for all Android library/app projects
subprojects { project ->
    // helper to configure Android DSL safely
    def configureAndroid = { p ->
        if (p.plugins.hasPlugin('com.android.library') || p.plugins.hasPlugin('com.android.application')) {
            try {
                // Support both older and newer AGP DSLs by attempting both properties.
                try {
                    p.android.compileSdk = 36
                } catch (ignored) {
                    // fallback for older AGP
                    p.android.compileSdkVersion = 36
                }

                // also set targetSdk / targetSdkVersion where available
                if (p.android.defaultConfig != null) {
                    try {
                        p.android.defaultConfig.targetSdk = 36
                    } catch (ignored2) {
                        p.android.defaultConfig.targetSdkVersion = 36
                    }
                }
            } catch (e) {
                // fail-safe: some subprojects may not expose android DSL in time â€” ignore
                logger.debug("Could not force compileSdk/targetSdk for project ${p.name}: ${e.message}")
            }
        }
    }

    // Check if project is already evaluated; if so, configure immediately
    // Otherwise, schedule for afterEvaluate
    if (project.state.executed) {
        configureAndroid(project)
    } else {
        project.afterEvaluate {
            configureAndroid(project)
        }
    }
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
