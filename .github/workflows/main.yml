name: Generate Dev APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:   
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: üìö Git Checkout       
        uses: actions/checkout@v4

      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3"

      - name: üì¶ Install Dependencies
        run: flutter packages get

      - name: ‚ú® Check Formatting
        run: dart format --set-exit-if-changed lib test

      - name: ‚öôÔ∏è Code Generation
        run: dart run build_runner build --delete-conflicting-outputs

      - name: üïµÔ∏è Analyze
        run: flutter analyze lib

      - name: ‚öôÔ∏è Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: key.jks
          encodedString: ${{ secrets.DEV_KEYSTORE }}

      - name: üîê Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.DEV_KEYSTORE_PASSPHRASE }}" >> android/key.properties
          echo "keyPassword=${{ secrets.DEV_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.DEV_KEYSTORE_ALIAS }}" >> android/key.properties

      - name: ‚öôÔ∏è Build APK
        run: flutter build apk --flavor production --target lib/main_production.dart

      - name: üì¶ Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CREDENTIALS }}
          groups: internal-testing
          file: build/app/outputs/flutter-apk/app-production-release.apk

      # - name: ‚öôÔ∏è Setup Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: "3.0"
      #     bundler-cache: true

      # - name: ‚öôÔ∏è Download bundle dependencies
      #   run: |
      #     gem install bundler:2.0.2
      #     bundle install

      # - name: üöÄ Release to Google Play (Production)
      #   env:
      #     SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
      #     SUPPLY_JSON_KEY_DATA: ${{ secrets.PLAY_STORE_CREDENTIALS }}
      #   run: |
      #     bundle exec fastlane supply \
      #     --aab build/app/outputs/bundle/productionRelease/app-production-release.aab \
      #     --track production
